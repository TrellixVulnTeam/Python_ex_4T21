# Dict01.py

# Dictionary(사전) <-- key:value
# keys(), values(), items()
# Dict는 index를 우리가 원하는 key값으로 지정해주는 느낌으로 받아들이면 된다.
# 따라서 인덱스를 사용했던 것처럼 보통의 a[1]처럼 c[10]을 쓰면 된다.

a = {10, 20, 30}    #Set --> Set()
b = {}              #empty Dict
c = {10:'사과', 20:'배', 30:'토마토'}

print(type(a),type(b),type(c))

print(c.keys())
print(c.values())
print(c.items())

print(c[10])
c[20] = '포도'
print(c)

c[40] = '파인애플'
print(c)
#####################################

직원01 = {'이름':'홍길동',
          '사번':1001,
          '자격증':['운전','한국사','컴활']}
print(직원01)
#array는 다양한 형태의 데이터 타입을 한번에 못올린다.
#따라서 파이썬에서는 Dict나 Class의 사용을 생각하고
#C는 Struct, Java C#등에서는 Class를 생각하게 된다.


학생01 = {'이름':'홍길동',
          '학번':1001,
          '과목별점수':{'국어':67,'수학':78,'영어':90}}
print(학생01)

학생02 = {'이름':'김연아',
          '학번':1002,
          '과목별점수':{'국어':99,'수학':98,'영어':99}}
print(학생02)

학생03 = {'이름':'이승엽',
          '학번':1003,
          '과목별점수':{'국어':33,'수학':23,'영어':67}}
print(학생03)
#학생01, 학생02, 학생03은 주소다.

학생들 = [학생01,학생02,학생03]

#첫번째 학생의 학번은?
print(학생들[0]['학번'])

#두번째 학생의 영어점수는?
print(학생들[-2]['과목별점수']['영어'])













